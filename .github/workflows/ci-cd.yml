name: Lint & Test on PR, Build & Deploy on Main

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ubuntu-npm-cache
          restore-keys: ubuntu-npm-cache

      - name: Install dependencies
        run: npm install

      - name: Run Linters
        run: |
          npx eslint .
          npx stylelint "**/*.css"
        continue-on-error: true

  test:
    name: test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ubuntu-npm-cache
          restore-keys: ubuntu-npm-cache

      - name: Install dependencies
        run: npm install

      - name: Run Tests
        run: echo "test"

  build:
    name: build
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ubuntu-npm-cache
          restore-keys: ubuntu-npm-cache

      - name: Install dependencies
        run: npm install

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: Build Site with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
